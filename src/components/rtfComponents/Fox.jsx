/*
if we want to manipulate the different parts of th model, we need to 
traverse the loaded model, search for the right child, save it
in some ways and apply whatever we need to it: but we can use React Three Fiber: it
is going to convert a glTF file to a React Three Fiber Component
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export default function Fox(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('./Fox/glTF-Binary/Fox.glb')
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <group name="root">
          <skinnedMesh
            name="fox"
            geometry={nodes.fox.geometry}
            material={materials.fox_material}
            skeleton={nodes.fox.skeleton}
          />
          <primitive object={nodes._rootJoint} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('./Fox/glTF-Binary/Fox.glb')
